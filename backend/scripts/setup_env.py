#!/usr/bin/env python3
"""
setup_env.py
Interactive script to set up API keys for AI Speech Coach
"""

import os
import sys
from pathlib import Path

def setup_api_keys():
    """Interactive setup for API keys"""
    print("🔑 AI Speech Coach API Key Setup")
    print("=" * 40)
    
    # Get project directory
    project_dir = Path(__file__).parent
    env_file = project_dir / ".env"
    
    print(f"\n📁 Project directory: {project_dir}")
    print(f"📄 Environment file: {env_file}")
    
    # Check if .env already exists
    if env_file.exists():
        print("\n⚠️  .env file already exists!")
        overwrite = input("Do you want to overwrite it? (y/N): ").lower().strip()
        if overwrite != 'y':
            print("❌ Setup cancelled.")
            return
    
    print("\n🔧 Let's set up your API keys:")
    print("\n1. Google Gemini API Key")
    print("   Get it from: https://makersuite.google.com/app/apikey")
    google_key = input("   Enter your Google API key: ").strip()
    
    print("\n2. OpenAI API Key")
    print("   Get it from: https://platform.openai.com/api-keys")
    openai_key = input("   Enter your OpenAI API key: ").strip()
    
    # Validate keys (basic check)
    if not google_key or len(google_key) < 10:
        print("❌ Invalid Google API key")
        return
    
    if not openai_key or len(openai_key) < 10:
        print("❌ Invalid OpenAI API key")
        return
    
    # Write .env file
    env_content = f"""# AI Speech Coach Environment Variables
# Generated by setup_env.py

# Google Gemini API Key
GOOGLE_API_KEY={google_key}

# OpenAI API Key
OPENAI_API_KEY={openai_key}

# Log level
LOG_LEVEL=INFO
"""
    
    try:
        with open(env_file, 'w') as f:
            f.write(env_content)
        
        print(f"\n✅ Successfully created {env_file}")
        print("\n🚀 Next steps:")
        print("1. Activate your virtual environment: source venv/bin/activate")
        print("2. Install python-dotenv: pip install python-dotenv")
        print("3. Run the application: python main.py")
        
    except Exception as e:
        print(f"❌ Error creating .env file: {e}")

if __name__ == "__main__":
    setup_api_keys()
